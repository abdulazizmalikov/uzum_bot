import time
import threading
import requests
from telegram import Bot, Update
from telegram.ext import CommandHandler, Updater, CallbackContext

# –¢–æ–∫–µ–Ω—ã –∏ ID
TELEGRAM_TOKEN = "7666979213:AAESg9nVlPfCkx_lg0gyNUdgoNUFXSbsw0Y"
UZUM_API_KEY = "vCRhQSWjWcuusOQzTTAGP9mnI6op6wTaZ1QU7NgWxac="
CHAT_ID = 998980322

# URL API Uzum
UZUM_API_URL = "https://api-seller.uzum.uz/api/seller/v1/orders"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TELEGRAM_TOKEN)

# –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
processed_orders = set()

def get_new_orders():
    headers = {
        "Authorization": f"Bearer {UZUM_API_KEY}",
        "Content-Type": "application/json"
    }
    try:
        response = requests.get(UZUM_API_URL, headers=headers)
        if response.status_code == 200:
            return response.json().get('orders', [])
        else:
            print("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤:", response.status_code)
            return []
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", e)
        return []

def format_order(order):
    order_id = order.get("id")
    customer = order.get("customer", {})
    customer_name = customer.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–ª–∏–µ–Ω—Ç")
    items = order.get("items", [])
    items_text = "\n".join([
        f"- {item.get('productName', '–¢–æ–≤–∞—Ä')} (x{item.get('quantity', 1)})"
        for item in items
    ])
    return (
        f"üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #{order_id}\n"
        f"üë§ –ö–ª–∏–µ–Ω—Ç: {customer_name}\n"
        f"üõí –¢–æ–≤–∞—Ä—ã:\n{items_text}"
    )

def check_and_notify():
    orders = get_new_orders()
    for order in orders:
        order_id = order.get("id")
        if order_id and order_id not in processed_orders:
            message = format_order(order)
            bot.send_message(chat_id=CHAT_ID, text=message)
            processed_orders.add(order_id)

def periodic_check():
    while True:
        check_and_notify()
        time.sleep(300)  # –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

# === –ö–æ–º–∞–Ω–¥—ã Telegram ===

def start(update: Update, context: CallbackContext):
    update.message.reply_text("üëã –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –Ø –±—É–¥—É —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö!")

def check(update: Update, context: CallbackContext):
    update.message.reply_text("üîÑ –ü—Ä–æ–≤–µ—Ä—è—é –∑–∞–∫–∞–∑—ã...")
    check_and_notify()
    update.message.reply_text("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

# === –ó–∞–ø—É—Å–∫ ===

def main():
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
    bot.send_message(chat_id=CHAT_ID, text="‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç –∑–∞–∫–∞–∑—ã!")

    # –°—Ç–∞—Ä—Ç—É–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–∫–∞–∑–æ–≤ –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
    thread = threading.Thread(target=periodic_check)
    thread.start()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ Telegram
    updater = Updater(token=TELEGRAM_TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("check", check))
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
